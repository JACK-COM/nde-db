/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { DBContext } from "./../context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * UTC Date-time
     */
    date<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "NDDateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * UTC Date-time
     */
    date<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "NDDateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  CreateContentTagInput: { // input type
    description: string; // String!
    example?: string | null; // String
    name: string; // String!
  }
  CreateReporterInput: { // input type
    name: string; // String!
    type: NexusGenEnums['ReporterType']; // ReporterType!
  }
  CreateVideoInput: { // input type
    reporterId: number; // Int!
    source: NexusGenEnums['VideoSource'] | null; // VideoSource
    title: string; // String!
    url: string; // String!
  }
  TagBookInput: { // input type
    bookId: number; // Int!
    id?: number | null; // Int
    reporterId: number; // Int!
    tagId: number; // Int!
  }
  TagSiteInput: { // input type
    id?: number | null; // Int
    reporterId: number; // Int!
    tagId: number; // Int!
    websiteId: number; // Int!
  }
  TagVideoInput: { // input type
    reporterId: number; // Int!
    tagId: number; // Int!
    timestamp?: string | null; // String
    videoId: number; // Int!
  }
  UpdateContentTagInput: { // input type
    description?: string | null; // String
    example?: string | null; // String
    id: number; // Int!
    name?: string | null; // String
  }
  UpdateReporterInput: { // input type
    id: number; // Int!
    name?: string | null; // String
    type?: NexusGenEnums['ReporterType'] | null; // ReporterType
  }
  UpdateVideoInput: { // input type
    id: number; // Int!
    reporterId?: number | null; // Int
    source?: NexusGenEnums['VideoSource'] | null; // VideoSource
    title?: string | null; // String
    url?: string | null; // String
  }
}

export interface NexusGenEnums {
  ContentStatus: "draft" | "hidden" | "live"
  ReporterType: "experiencer" | "observer" | "researcher"
  UserRoles: "admin" | "dataentry" | "moderator" | "researcher"
  VideoSource: "other" | "vimeo" | "youtube"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  NDDateTime: any
}

export interface NexusGenObjects {
  Mutation: {};
  NDBook: { // root type
    addedBy: number; // Int!
    id?: string | null; // ID
    lastUpdated?: NexusGenScalars['NDDateTime'] | null; // NDDateTime
    publishDate?: string | null; // String
    publisher?: string | null; // String
    reporterId: number; // Int!
    status: NexusGenEnums['ContentStatus']; // ContentStatus!
    title: string; // String!
  }
  NDBookTag: { // root type
    ContentTag?: NexusGenRootTypes['NDContentTag'] | null; // NDContentTag
    addedBy: number; // Int!
    bookId: number; // Int!
    id?: number | null; // Int
    lastUpdated?: NexusGenScalars['NDDateTime'] | null; // NDDateTime
    reporterId: number; // Int!
    status: NexusGenEnums['ContentStatus']; // ContentStatus!
    tagId: number; // Int!
  }
  NDContentTag: { // root type
    description: string; // String!
    example?: string | null; // String
    id?: number | null; // Int
    name: string; // String!
  }
  NDReporter: { // root type
    addedBy: number; // Int!
    id?: number | null; // Int
    lastUpdated?: NexusGenScalars['NDDateTime'] | null; // NDDateTime
    name: string; // String!
    status: NexusGenEnums['ContentStatus']; // ContentStatus!
    type: NexusGenEnums['ReporterType']; // ReporterType!
  }
  NDVideo: { // root type
    VideoTag?: Array<NexusGenRootTypes['NDVideoTag'] | null> | null; // [NDVideoTag]
    addedBy: number; // Int!
    id?: number | null; // Int
    lastUpdated?: NexusGenScalars['NDDateTime'] | null; // NDDateTime
    reporterId: number; // Int!
    source?: string | null; // String
    status: NexusGenEnums['ContentStatus']; // ContentStatus!
    title: string; // String!
    url: string; // String!
  }
  NDVideoTag: { // root type
    ContentTag?: NexusGenRootTypes['NDContentTag'] | null; // NDContentTag
    addedBy: number; // Int!
    id?: number | null; // Int
    lastUpdated?: NexusGenScalars['NDDateTime'] | null; // NDDateTime
    reporterId: number; // Int!
    status: NexusGenEnums['ContentStatus']; // ContentStatus!
    tagId: number; // Int!
    timestamp?: string | null; // String
    videoId: number; // Int!
  }
  NDWebsite: { // root type
    addedBy: number; // Int!
    id?: string | null; // ID
    lastUpdated?: NexusGenScalars['NDDateTime'] | null; // NDDateTime
    reporterId: number; // Int!
    status: NexusGenEnums['ContentStatus']; // ContentStatus!
    url: string; // String!
  }
  NDWebsiteTag: { // root type
    ContentTag?: NexusGenRootTypes['NDContentTag'] | null; // NDContentTag
    addedBy: number; // Int!
    id?: string | null; // ID
    lastUpdated?: NexusGenScalars['NDDateTime'] | null; // NDDateTime
    reporterId: number; // Int!
    status: NexusGenEnums['ContentStatus']; // ContentStatus!
    tagId: number; // Int!
    websiteId: number; // Int!
  }
  Query: {};
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    createContentTags: Array<NexusGenRootTypes['NDContentTag'] | null> | null; // [NDContentTag]
    createReporters: Array<NexusGenRootTypes['NDReporter'] | null> | null; // [NDReporter]
    createVideoTags: Array<NexusGenRootTypes['NDVideoTag'] | null> | null; // [NDVideoTag]
    createVideos: Array<NexusGenRootTypes['NDVideo'] | null> | null; // [NDVideo]
    updateContentTags: Array<NexusGenRootTypes['NDContentTag'] | null> | null; // [NDContentTag]
    updateReporters: Array<NexusGenRootTypes['NDReporter'] | null> | null; // [NDReporter]
    updateVideoTags: Array<NexusGenRootTypes['NDVideoTag'] | null> | null; // [NDVideoTag]
    updateVideos: Array<NexusGenRootTypes['NDVideo'] | null> | null; // [NDVideo]
  }
  NDBook: { // field return type
    addedBy: number; // Int!
    id: string | null; // ID
    lastUpdated: NexusGenScalars['NDDateTime'] | null; // NDDateTime
    publishDate: string | null; // String
    publisher: string | null; // String
    reporterId: number; // Int!
    status: NexusGenEnums['ContentStatus']; // ContentStatus!
    title: string; // String!
  }
  NDBookTag: { // field return type
    ContentTag: NexusGenRootTypes['NDContentTag'] | null; // NDContentTag
    addedBy: number; // Int!
    bookId: number; // Int!
    id: number | null; // Int
    lastUpdated: NexusGenScalars['NDDateTime'] | null; // NDDateTime
    reporterId: number; // Int!
    status: NexusGenEnums['ContentStatus']; // ContentStatus!
    tagId: number; // Int!
  }
  NDContentTag: { // field return type
    description: string; // String!
    example: string | null; // String
    id: number | null; // Int
    name: string; // String!
  }
  NDReporter: { // field return type
    addedBy: number; // Int!
    id: number | null; // Int
    lastUpdated: NexusGenScalars['NDDateTime'] | null; // NDDateTime
    name: string; // String!
    status: NexusGenEnums['ContentStatus']; // ContentStatus!
    type: NexusGenEnums['ReporterType']; // ReporterType!
  }
  NDVideo: { // field return type
    VideoTag: Array<NexusGenRootTypes['NDVideoTag'] | null> | null; // [NDVideoTag]
    addedBy: number; // Int!
    id: number | null; // Int
    lastUpdated: NexusGenScalars['NDDateTime'] | null; // NDDateTime
    reporterId: number; // Int!
    source: string | null; // String
    status: NexusGenEnums['ContentStatus']; // ContentStatus!
    title: string; // String!
    url: string; // String!
  }
  NDVideoTag: { // field return type
    ContentTag: NexusGenRootTypes['NDContentTag'] | null; // NDContentTag
    addedBy: number; // Int!
    id: number | null; // Int
    lastUpdated: NexusGenScalars['NDDateTime'] | null; // NDDateTime
    reporterId: number; // Int!
    status: NexusGenEnums['ContentStatus']; // ContentStatus!
    tagId: number; // Int!
    timestamp: string | null; // String
    videoId: number; // Int!
  }
  NDWebsite: { // field return type
    addedBy: number; // Int!
    id: string | null; // ID
    lastUpdated: NexusGenScalars['NDDateTime'] | null; // NDDateTime
    reporterId: number; // Int!
    status: NexusGenEnums['ContentStatus']; // ContentStatus!
    url: string; // String!
  }
  NDWebsiteTag: { // field return type
    ContentTag: NexusGenRootTypes['NDContentTag'] | null; // NDContentTag
    addedBy: number; // Int!
    id: string | null; // ID
    lastUpdated: NexusGenScalars['NDDateTime'] | null; // NDDateTime
    reporterId: number; // Int!
    status: NexusGenEnums['ContentStatus']; // ContentStatus!
    tagId: number; // Int!
    websiteId: number; // Int!
  }
  Query: { // field return type
    listBookTags: Array<NexusGenRootTypes['NDBookTag'] | null>; // [NDBookTag]!
    listContentTags: Array<NexusGenRootTypes['NDContentTag'] | null>; // [NDContentTag]!
    listReporters: Array<NexusGenRootTypes['NDReporter'] | null>; // [NDReporter]!
    listVideos: Array<NexusGenRootTypes['NDVideo'] | null>; // [NDVideo]!
  }
}

export interface NexusGenFieldTypeNames {
  Mutation: { // field return type name
    createContentTags: 'NDContentTag'
    createReporters: 'NDReporter'
    createVideoTags: 'NDVideoTag'
    createVideos: 'NDVideo'
    updateContentTags: 'NDContentTag'
    updateReporters: 'NDReporter'
    updateVideoTags: 'NDVideoTag'
    updateVideos: 'NDVideo'
  }
  NDBook: { // field return type name
    addedBy: 'Int'
    id: 'ID'
    lastUpdated: 'NDDateTime'
    publishDate: 'String'
    publisher: 'String'
    reporterId: 'Int'
    status: 'ContentStatus'
    title: 'String'
  }
  NDBookTag: { // field return type name
    ContentTag: 'NDContentTag'
    addedBy: 'Int'
    bookId: 'Int'
    id: 'Int'
    lastUpdated: 'NDDateTime'
    reporterId: 'Int'
    status: 'ContentStatus'
    tagId: 'Int'
  }
  NDContentTag: { // field return type name
    description: 'String'
    example: 'String'
    id: 'Int'
    name: 'String'
  }
  NDReporter: { // field return type name
    addedBy: 'Int'
    id: 'Int'
    lastUpdated: 'NDDateTime'
    name: 'String'
    status: 'ContentStatus'
    type: 'ReporterType'
  }
  NDVideo: { // field return type name
    VideoTag: 'NDVideoTag'
    addedBy: 'Int'
    id: 'Int'
    lastUpdated: 'NDDateTime'
    reporterId: 'Int'
    source: 'String'
    status: 'ContentStatus'
    title: 'String'
    url: 'String'
  }
  NDVideoTag: { // field return type name
    ContentTag: 'NDContentTag'
    addedBy: 'Int'
    id: 'Int'
    lastUpdated: 'NDDateTime'
    reporterId: 'Int'
    status: 'ContentStatus'
    tagId: 'Int'
    timestamp: 'String'
    videoId: 'Int'
  }
  NDWebsite: { // field return type name
    addedBy: 'Int'
    id: 'ID'
    lastUpdated: 'NDDateTime'
    reporterId: 'Int'
    status: 'ContentStatus'
    url: 'String'
  }
  NDWebsiteTag: { // field return type name
    ContentTag: 'NDContentTag'
    addedBy: 'Int'
    id: 'ID'
    lastUpdated: 'NDDateTime'
    reporterId: 'Int'
    status: 'ContentStatus'
    tagId: 'Int'
    websiteId: 'Int'
  }
  Query: { // field return type name
    listBookTags: 'NDBookTag'
    listContentTags: 'NDContentTag'
    listReporters: 'NDReporter'
    listVideos: 'NDVideo'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createContentTags: { // args
      data: Array<NexusGenInputs['CreateContentTagInput'] | null>; // [CreateContentTagInput]!
    }
    createReporters: { // args
      data: Array<NexusGenInputs['CreateReporterInput'] | null>; // [CreateReporterInput]!
    }
    createVideoTags: { // args
      data: Array<NexusGenInputs['TagVideoInput'] | null>; // [TagVideoInput]!
    }
    createVideos: { // args
      data: Array<NexusGenInputs['CreateVideoInput'] | null>; // [CreateVideoInput]!
    }
    updateContentTags: { // args
      data: Array<NexusGenInputs['UpdateContentTagInput'] | null>; // [UpdateContentTagInput]!
    }
    updateReporters: { // args
      data: Array<NexusGenInputs['UpdateReporterInput'] | null>; // [UpdateReporterInput]!
    }
    updateVideoTags: { // args
      data: Array<NexusGenInputs['TagVideoInput'] | null>; // [TagVideoInput]!
    }
    updateVideos: { // args
      data: Array<NexusGenInputs['UpdateVideoInput'] | null>; // [UpdateVideoInput]!
    }
  }
  Query: {
    listBookTags: { // args
      bookId?: number | null; // Int
    }
    listContentTags: { // args
      description?: string | null; // String
      name?: string | null; // String
    }
    listReporters: { // args
      name?: string | null; // String
      type?: NexusGenEnums['ReporterType'] | null; // ReporterType
    }
    listVideos: { // args
      reporterId?: number | null; // Int
      source?: string | null; // String
      status?: NexusGenEnums['ContentStatus'] | null; // ContentStatus
      title?: string | null; // String
      url?: string | null; // String
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: DBContext;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}